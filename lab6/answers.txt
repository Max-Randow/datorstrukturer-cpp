
1:
eventQueue andvänds i,

Simulation::run:
Kör simulationen. Plockar ut nästan event från queue och
bearbetar nästa event annars om SIMULATION_HORIZON är uppnådd
så kastar den bort events i queue.

Simulation::scheduleEvent
Lägger till en ny event i eventQueue.

allThefish andvänds i,
Simulation::harvestTonnageNow
Gör en harvest, dvs tar ut alla levande fiskar och "fångar" alla
som är tillräckligt stora. Samtidigt minskar den populationen av
alla vuxna och juvenile fiskar. Sist lägger den tillbaks alla
fiskar som inte blev fångade i allTheFish.

Simulation::addFish
Lägger till en fisk i allTheFish.

2:
(83000, 450)
(55000, 250)
(90000, 500)

3:
Om push_back har O(N) complexitet kommer vector ha en kvadratisk complexitet
överlag eftersom vid varje pushback kommer en kopiering att ske för att utöka
storleken i storage. Det ger 1 + 2 + 3 + 4 ... + n kopieringar vilket är n(n+1)/2 dvs O(N^2)
Medans O(1) kommer ge amorterad complexitet då storage dubblerar storleken vilket
resulterar i färre kopieringar överlag.
